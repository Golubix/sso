@*@using Domain1.Models
@model LoginViewModel*@
@model SSO.Models.ScrAccount
@{
    ViewBag.Title = "Log in";
}
<head></head>
<body>

    @*<h2>@ViewBag.Title.</h2>*@
  
    <div class="row">
        <div class="col-md-8">
            <section id="loginForm">
                @using (Html.BeginForm("Login", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                    @*@Html.AntiForgeryToken()*@
                    <h4>Use a local account to log in to Domain2.</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.UserName, new { placeholder = "Username", @class = "form-control", id = "UserName", @onchange = "userChanged();" })
                            @*@Html.TextBoxFor(m => m.Email, new { @class = "form-control" })*@
                            @Html.ValidationMessageFor(m => m.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div>
                        @Html.ValidationSummary()
                    </div>
                    @*<div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <div class="checkbox">
                                    @Html.CheckBoxFor(m => m.RememberMe)
                                    @Html.LabelFor(m => m.RememberMe)
                                </div>
                            </div>
                        </div>*@
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" id="LoginSubmit" value="Log in" class="btn btn-default" />
                        </div>
                    </div>
                    @Html.Hidden("ResponseDomain", Model.ResponseDomain)
                    @Html.Hidden("ResponseRelativePath", Model.ResponseRelativePath)
                    @Html.Hidden("Language", Model.Language)
                    @*<p>
                            @Html.ActionLink("Register as a new user", "Register")
                        </p>*@
                    @* Enable this once you have account confirmation enabled for password reset functionality
                        <p>
                            @Html.ActionLink("Forgot your password?", "ForgotPassword")
                        </p>*@
                }
            </section>
        </div>
        @*<div class="col-md-4">
                <section id="socialLoginForm">
                    @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                </section>
            </div>*@
    </div>
</body>
@*@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}*@